mod Linux
{
    ["stub"]
	let __write = extern fun(fd: i32; buf: ptr; size: mm) => i64;
    
    ["stub"]
    let __read = extern fun(fd: i32; buf: ptr; size: mm) => i64;

    ["stub"]
    let __open = extern fun(filename: i8*; flags: i32; mode: i32) => i32;

    ["stub"]
    let __close = extern fun(fd: i32) => i32;

    ["stub"]
    let __openat = extern fun(dirfd: i32; filename: i8*; flags: i32; mode: i32) => i32;

    ["stub"]
    let __mmap = extern fun(addr: ptr; length: mm; prot: i32; flags: i32; fd: i32; offset: mm) => ptr;

    ["stub"]
    let __munmap = extern fun(addr: ptr; length: mm) => i32;


    // *** Dumping AST Record Layout
    //      0 | struct stat
    //      0 |   __dev_t st_dev
    //      8 |   __ino_t st_ino
    //     16 |   __nlink_t st_nlink
    //     24 |   __mode_t st_mode
    //     28 |   __uid_t st_uid
    //     32 |   __gid_t st_gid
    //     36 |   int __pad0
    //     40 |   __dev_t st_rdev
    //     48 |   __off_t st_size
    //     56 |   __blksize_t st_blksize
    //     64 |   __blkcnt_t st_blocks
    //     72 |   struct timespec st_atim
    //     72 |     __time_t tv_sec
    //     80 |     __syscall_slong_t tv_nsec
    //     88 |   struct timespec st_mtim
    //     88 |     __time_t tv_sec
    //     96 |     __syscall_slong_t tv_nsec
    //    104 |   struct timespec st_ctim
    //    104 |     __time_t tv_sec
    //    112 |     __syscall_slong_t tv_nsec
    //    120 |   __syscall_slong_t [3] __glibc_reserved
    //        | [sizeof=144, dsize=144, align=8,
    //        |  nvsize=144, nvalign=8]


    let timespec = struct(
        tv_sec: i64;
        tv_nsec: i64;
    );

    ["packed"]
    let stat = struct(
        st_dev: i64;
        st_ino: i64;
        st_nlink: i64;
        st_mode: i32;
        st_uid: i32;
        st_gid: i32;
        __pad0: i32;
        st_rdev: i64;
        st_size: i64;
        st_blksize: i64;
        st_blocks: i64;
        st_atim: timespec;
        st_mtim: timespec;
        st_ctim: timespec;
        reserved: i64[3];
    );

    ["stub"]
    let __fstatat = extern fun(dfd: i32; filename: i8*; statbuf: i8*; flag: i32) => i32;

    let MAP_SHARED =     0x01;
    let MAP_PRIVATE =    0x02;
    let MAP_TYPE =       0x0F;
    let MAP_FIXED =      0x10;
    let MAP_ANON =       0x20;
    let MAP_ANONYMOUS =  MAP_ANON;
    let MAP_NORESERVE =  0x4000;
    let MAP_GROWSDOWN =  0x0100;
    let MAP_DENYWRITE =  0x0800;
    let MAP_EXECUTABLE = 0x1000;
    let MAP_LOCKED =     0x2000;
    let MAP_POPULATE =   0x8000;
    let MAP_NONBLOCK =   0x10000;
    let MAP_STACK =      0x20000;
    let MAP_HUGETLB =    0x40000;
    let MAP_FILE =       0;

    let PROT_NONE =      0;
    let PROT_READ =      1;
    let PROT_WRITE =     2;
    let PROT_EXEC =      4;
    let PROT_GROWSDOWN = 0x01000000;
    let PROT_GROWSUP =   0x02000000;

    let MS_ASYNC =       1;
    let MS_INVALIDATE =  2;
    let MS_SYNC =        4;

    let MCL_CURRENT =    1;
    let MCL_FUTURE =     2;
    let MCL_ONFAULT =    4;

    let POSIX_MADV_NORMAL =     0;
    let POSIX_MADV_RANDOM =     1;
    let POSIX_MADV_SEQUENTIAL = 2;
    let POSIX_MADV_WILLNEED =   3;
    let POSIX_MADV_DONTNEED =   4;

    let O_ACCMODE =	    0x0003;
    let O_RDONLY =	    0x0000;
    let O_WRONLY =	    0x0001;
    let O_RDWR =		0x0002;
    let O_CREAT =	    0x0040;
    let O_EXCL =		0x0080;
    let O_NOCTTY =	    0x0100;
    let O_TRUNC =	    0x0200;
    let O_APPEND =	    0x0400;
    let O_NONBLOCK =	0x0800;
    let O_NDELAY =	    O_NONBLOCK;
    let O_SYNC =	    0x101000;
    let O_FSYNC =		O_SYNC;
    let O_ASYNC =	    0x2000;
    let O_LARGEFILE =	0x8000;

    let AT_FDCWD =		-100;


}