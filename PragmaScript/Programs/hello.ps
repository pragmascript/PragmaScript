let print_string = (s: string) => 
{
 	var handle = GetStdHandle(-11);
 	WriteFile(handle, s.data, s.length, nullptr, nullptr);
}

let abs_i32 = (value: int32) => 
{
  if (value >= 0) {
    return value;
  } else {
    return -value;
  }
}

let print_i32 = (value: int32) => 
{
	var x = value;
	var temp = "\0\0\0\0\0\0\0\0\0\0";
	var count = 0;
	for (var i = 0; i < temp.length; ++i) {
		if (x != 0) {
			var d = abs_i32(x % 10);
			temp[i] = (int8)(d + 48);
			x = x / 10;
			count++;
		} else {
			break;
		}
	}

	var offset = 0;
	if (value < 0) {
		offset = 1;
	}
	 
	var result = "\0\0\0\0\0\0\0\0\0\0\0";
	if (value < 0) {
		result[0] = (int8)45;
	}
	for (var i = 0; i < count; ++i) {
		result[i+offset] = temp[count - i - 1];
	}
	result.length = count + offset;
	print_string(result);
}

let vec = struct
{
	x: float32;
	y: float32;
	z: float32;
}

let main = () =>
{
	print_string("hello world!");
	return 0;
}

