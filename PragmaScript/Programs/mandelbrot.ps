var console_output_handle = GetStdHandle(-11);
var console_input_handle = GetStdHandle(-10);

let print_string = (s: string) => 
{
 	WriteFile(console_output_handle, s.data, s.length, nullptr, nullptr);
}


let abs_i32 = (value: i32) => 
{
  if (value >= 0) {
    return value;
  } else {
    return -value;
  }
}

let print_i32 = (value: i32) => 
{
	if (value == 0) {
		print_string("0");
		return;
	}
	var x = value;
	var temp = "\0\0\0\0\0\0\0\0\0\0";
	var count = 0;
	for (var i = 0; i < temp.length; ++i) {
		if (x != 0) {
			var d = abs_i32(x % 10);
			temp[i] = (i8)(d + 48);
			x = x / 10;
			count++;
		} else {
			break;
		}
	}
	var offset = 0;
	if (value < 0) {
		offset = 1;
	}
	var result = "\0\0\0\0\0\0\0\0\0\0\0";
	if (value < 0) {
		result[0] = (i8)45;
	}
	for (var i = 0; i < count; ++i) {
		result[i+offset] = temp[count - i - 1];
	}
	result.length = count + offset;
	print_string(result);
}


let main = () => 
{
	var ra = -2.0;
	var rb = 1.0;
	var ia = -1.0;
	var ib = 1.0;

	var maxx = 60.0;
	var maxy = maxx * 0.5 * (ib  - ia) / (rb - ra) + 1.0;

	var full = "#";
	var half = "x";
	var empt = ".";

	var deltay = (ib - ia) / maxy;
	var deltax = (rb - ra) / maxx;

	for (var cy = ia; cy < ib; cy += deltay) {
		for (var cx = ra; cx < rb; cx += deltax) {
			var x = 0.0;
			var y = 0.0;
			var iter = 0;
			for (; iter < 256; ++iter) {
				var x2 = x * x;
				var y2 = y * y;
				// stop iteration when length of Z > 2
				if (x2 + y2 > 4.0)
				{
					break;
				}
				var twoxy = 2.0 * x * y;
				x = x2 - y2 + cx;
				y = twoxy + cy;
			}
			if (iter < 25) {
				print_string(empt);
			}
			elif (iter < 200) {
				print_string(half);
			}
			else {
				print_string(full);
			}
		}
		print_string("\n");
	}
	wait_for_key();
}
